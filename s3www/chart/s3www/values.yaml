# Default values for s3www.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: y4m4/s3www
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v0.9.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# serviceAccount:
#   # Specifies whether a service account should be created
#   create: true
#   # Automatically mount a ServiceAccount's API credentials?
#   automount: true
#   # Annotations to add to the service account
#   annotations: {}
#   # The name of the service account to use.
#   # If not set and create is true, a name is generated using the fullname template
#   name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP  # Changed from LoadBalancer to ClusterIP
  port: 8080
  annotations: {}

ingress:
  enabled: true
  className: "gce"  # GCP Ingress class
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: "s3www-static-ip"  # Optional: Use a static IP
    networking.gke.io/managed-certificates: "s3www-cert"  # For managed SSL certificates
    kubernetes.io/ingress.allow-http: "false"  # Force HTTPS
  hosts:
    - host: s3www.example.com  # Replace with your domain
      paths:
        - path: /
          pathType: ImplementationSpecific
          servicePort: 8080
  tls: []  # Not needed if using managed certificates

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# livenessProbe:
#   httpGet:
#     path: /
#     port: http
# readinessProbe:
#   httpGet:
#     path: /
#     port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# s3www specific configurations
s3www:
  endpoint: "http://minio:9000"  # Using Kubernetes service name
  bucket: "up42"
  address: "0.0.0.0:8080"

# Metrics configuration
metrics:
  enabled: false
  serviceMonitor:
    enabled: false
    interval: 15s
    scrapeTimeout: 10s
    labels: {}
    # Additional labels for ServiceMonitor
    # Example:
    #   release: prometheus
    metricRelabelings: []
    relabelings: []
